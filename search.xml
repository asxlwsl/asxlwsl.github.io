<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScrpit学习</title>
      <link href="/2019/11/29/four/"/>
      <url>/2019/11/29/four/</url>
      
        <content type="html"><![CDATA[<h2 id="JavaScrpit字面量"><a href="#JavaScrpit字面量" class="headerlink" title="JavaScrpit字面量"></a>JavaScrpit字面量</h2><pre><code>在编程语言中，一般把定值成为字面量，如 3.14</code></pre><ul><li><p><strong>数字字面量</strong><br>  可以是整数，小数或科学计数     </p>  <figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">3.14</span></span><br><span class="line"></span><br><span class="line"><span class="number">1001</span></span><br><span class="line"></span><br><span class="line"><span class="number">123e5</span></span><br></pre></td></tr></table></figure></li><li><p><strong>字符字面量</strong><br>  可以使用单引号或双引号</p>  <figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">'John</span>'</span><br><span class="line"><span class="string">"John"</span></span><br></pre></td></tr></table></figure></li><li><p><strong>表达式字面量</strong></p>  <figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">5</span>+<span class="number">6</span></span><br></pre></td></tr></table></figure></li><li><p><strong>数组字面量</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">40</span>,<span class="number">100</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br></pre></td></tr></table></figure></li><li><p><strong>对象字面量</strong></p>  <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attribute">firstName</span>: <span class="string">"John"</span></span><br><span class="line">lastName: <span class="string">"Doe"</span></span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>函数字面量</strong></p>  <figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span><span class="params">()</span></span>&#123;</span><br><span class="line">......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="JavaScrpit变量"><a href="#JavaScrpit变量" class="headerlink" title="JavaScrpit变量"></a>JavaScrpit变量</h2><pre><code>用关键字var来定义变量<figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keywords">var</span> <span class="symbol">x</span>,<span class="symbol">y</span>;</span><br><span class="line"><span class="symbol">x</span>=<span class="number">5</span>;</span><br><span class="line"><span class="symbol">y</span>=<span class="string">"Tom"</span>;</span><br></pre></td></tr></table></figure></code></pre><hr><h2 id="JavaScrpit数据类型"><a href="#JavaScrpit数据类型" class="headerlink" title="JavaScrpit数据类型"></a>JavaScrpit数据类型</h2><pre><code>数字、字符串、布尔型、数组、对象等</code></pre><ul><li><strong><em>JavaScrpit拥有动态类型</em></strong><pre><code><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keywords">var</span> <span class="symbol">x</span>;    <span class="comment">// x=undefined</span></span><br><span class="line"><span class="symbol">x</span>=<span class="number">5</span>;      <span class="comment">// x作为数字</span></span><br><span class="line"><span class="symbol">x</span>=<span class="string">"Pop"</span>   <span class="comment">// x作为字符串</span></span><br></pre></td></tr></table></figure></code></pre></li><li><strong>JavaScrpit对象</strong><ul><li>对象类型（3种）：<blockquote><p>Object<br>Date<br>Arrary</p></blockquote></li><li>对象由花括号分隔，内部值为 <em>key: value</em>一一对应  <figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var dog=&#123;</span><br><span class="line"><span class="symbol">nick:</span><span class="string">"Peter"</span></span><br><span class="line"><span class="symbol">age:</span> <span class="number">3</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用对象的属性</span></span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> dog.age</span><br><span class="line"><span class="number">2.</span> dog[<span class="string">"age"</span>]</span><br></pre></td></tr></table></figure></li></ul></li><li><strong>undefined与null的区别</strong><ul><li>两者值相同，但类型不同<br>  typeof undefined = undefined<br>  typeof null = Object</li><li>null表示主动释放变量引用的对象，表示该变量不再指向任何对象的地址    </li></ul></li><li><strong>变量类型的声明</strong><br>  可以通过<u>new</u>来实现  <figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name=<span class="keyword">new</span> <span class="type">String</span>;</span><br><span class="line"><span class="keyword">var</span> age=<span class="keyword">new</span> <span class="type">Number</span>;</span><br><span class="line"><span class="keyword">var</span> bol=<span class="keyword">new</span> <span class="type">Boolean</span>;</span><br><span class="line"><span class="keyword">var</span> list=<span class="keyword">new</span> <span class="type">Arrary</span>;</span><br><span class="line"><span class="keyword">var</span> obj=<span class="keyword">new</span> <span class="type">Object</span>;</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h3><ul><li>遵从Java命名规范的驼峰命名法<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> lastName; <span class="literal">true</span></span><br><span class="line"><span class="keyword">var</span> Lastname; <span class="literal">false</span></span><br><span class="line"><span class="keyword">var</span> LastName; <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="JavaScrpit对象"><a href="#JavaScrpit对象" class="headerlink" title="JavaScrpit对象"></a>JavaScrpit对象</h3><pre><code>|attributes|value |function ||---       |---   |---      ||name      |&quot;John&quot;|getName()||age       |15    |getAge ()||...       |...   |...      |<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> dog=&#123;</span><br><span class="line">name: <span class="string">"John"</span>,</span><br><span class="line">age: <span class="number">15</span>,</span><br><span class="line">...</span><br><span class="line">getName: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">&#125;</span><br><span class="line">getAge: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.age;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre><hr><h3 id="JavaScrpit作用域"><a href="#JavaScrpit作用域" class="headerlink" title="JavaScrpit作用域"></a>JavaScrpit作用域</h3><pre><code>在JavaScript中作用域为可访问变量、对象、函数的集合，又分为局部作用域和全局作用域变量在函数内声明则该变量作用于局部，如果未使用var关键字，则作用于全局。作用于全局的全局变量也可视为window的一项属性，即可以使用***&quot;window.x&quot;***的方式调用</code></pre><hr><h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><h4 id="符号"><a href="#符号" class="headerlink" title="=== 符号"></a>=== 符号</h4><ul><li>表示绝对相等，即：数据类型和值完全相同<h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4></li><li>constructor  返回创建字符串属性的函数   可以用来检测具体类型</li><li>length       返回长度</li><li>protype      允许向对象添加属性和方法</li></ul><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"John"</span>.constructor    结果： <span class="function"><span class="keyword">function</span> <span class="title">String</span><span class="params">()</span> </span>&#123;[<span class="keyword">native</span> code]&#125;</span><br><span class="line">(<span class="number">3.14</span>).constructor    结果： <span class="function"><span class="keyword">function</span> <span class="title">Number</span><span class="params">()</span> </span>&#123;[<span class="keyword">native</span> code]&#125;</span><br><span class="line"><span class="literal">true</span>.constructor      结果： <span class="function"><span class="keyword">function</span> <span class="title">Boolean</span><span class="params">()</span> </span>&#123;[<span class="keyword">native</span> code]&#125;</span><br><span class="line">[<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>].constructor     结果： <span class="function"><span class="keyword">function</span> <span class="title">Arrary</span><span class="params">()</span> </span>&#123;[<span class="keyword">native</span> code]&#125;</span><br><span class="line"><span class="keyword">new</span> Date().constructor      结果： <span class="function"><span class="keyword">function</span> <span class="title">Date</span><span class="params">()</span> </span>&#123;[<span class="keyword">native</span> code]&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;&#125;.constructor    结果： <span class="function"><span class="keyword">function</span> <span class="title">Function</span><span class="params">()</span> </span>&#123;[<span class="keyword">native</span> code]&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="各数据类型的转化"><a href="#各数据类型的转化" class="headerlink" title="各数据类型的转化"></a>各数据类型的转化</h3><ul><li>Number方法<ul><li>toExponential() 转化为指数计数法</li><li>toFixed() 将数字化为字符串</li><li>toPrecision() 将数字格式化为指定长度</li></ul></li><li>String()与.toString()都有效</li></ul><hr><h2 id="JavaScrpit事件"><a href="#JavaScrpit事件" class="headerlink" title="JavaScrpit事件"></a>JavaScrpit事件</h2><pre><code>通过使用Javascript可以触发HTML事件</code></pre><blockquote><p>HTML事件</p><blockquote><p>浏览器行为<br>用户行为</p></blockquote></blockquote><ul><li>常见HTML事件<table><thead><tr><th>事件</th><th>触发条件</th></tr></thead><tbody><tr><td>onchange</td><td>HTML元素发生改变</td></tr><tr><td>onclick</td><td>点击元素</td></tr><tr><td>onmouseover</td><td>鼠标在元素上</td></tr><tr><td>onmouseout</td><td>将鼠标移开元素</td></tr><tr><td>onkeydown</td><td>按下键盘按键</td></tr><tr><td>onload</td><td>页面完成加载</td></tr></tbody></table></li></ul><hr><h2 id="JavaScrpit正则表达式"><a href="#JavaScrpit正则表达式" class="headerlink" title="JavaScrpit正则表达式"></a>JavaScrpit正则表达式</h2><ul><li><p>语法<br> /表达式主体/</p><p> 修饰符（可选）</p><ul><li>修饰符<blockquote><p>i 大小写不敏感<br>g 全局匹配<br>m 多行匹配</p></blockquote></li></ul></li></ul><hr><h1 id="持续更新-……"><a href="#持续更新-……" class="headerlink" title="持续更新 ……"></a>持续更新 ……</h1>]]></content>
      
      
      <categories>
          
          <category> 前端学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScrpit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android中Activity和AppCompatActivity的区别</title>
      <link href="/2019/11/28/third/"/>
      <url>/2019/11/28/third/</url>
      
        <content type="html"><![CDATA[<h3 id="AppCompatActivity"><a href="#AppCompatActivity" class="headerlink" title="AppCompatActivity"></a>AppCompatActivity</h3><ul><li><p>继承自<strong>FragmentActivityJB</strong>, <strong>FragmentActivityJB</strong>又继承于<strong>BaseFragmentActivityHoneycomb</strong>,</p><p>……最后一直继承到<strong>Activity</strong>,因此<strong>AppCompatActivity</strong>是<strong>Activity</strong>衍生出来的一个子类</p><p><strong>AppCompatActivity</strong>会默认给一个标题栏，此外也会包含一些新的特性</p></li></ul><hr><ul><li>持续更新中……</li></ul>]]></content>
      
      
      <categories>
          
          <category> Android学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My First Blog</title>
      <link href="/2019/11/25/first/"/>
      <url>/2019/11/25/first/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre><code>第一次写博客，不知道该写些什么东西，就把自己看到的Markdown基础操作记录了一下   作为一名已经大二了但却什么都不太会的计算机专业的学生，我感到很慌，没有出彩的成绩，   也没有傲人的奖状，有的只有上课时的一脸懵逼，万分惭愧，为此，我想利用写博客的机会   来巩固一下自己所学的一些知识和一些疑惑的解答。祝愿我能成为更好的自己吧！加油</code></pre><h2 id="Markdown基础学习"><a href="#Markdown基础学习" class="headerlink" title="Markdown基础学习"></a>Markdown基础学习</h2><blockquote><h4 id="1-MarkDown中的语法规则"><a href="#1-MarkDown中的语法规则" class="headerlink" title="1. MarkDown中的语法规则"></a>1. MarkDown中的语法规则</h4><blockquote><ul><li>MarkDown的标题<ul><li>使用[^============和———]:”=”为一级标题，“-”为二级标题            </li><li>使用“#”标记</li></ul></li></ul></blockquote></blockquote><blockquote><blockquote><ul><li>MarkDown的段落      <ul><li>段落的换行使用两个以上的空格加回车(未生效)或者空一行</li></ul></li></ul></blockquote></blockquote><blockquote><blockquote><ul><li>MarkDown字体<br><em>斜体</em><br><em>斜体</em><br><strong>粗体</strong><br><strong>粗体</strong><br><strong><em>粗斜体</em></strong><br><strong><em>粗斜体</em></strong></li></ul></blockquote></blockquote><blockquote><blockquote><ul><li>分割线</li></ul></blockquote></blockquote><blockquote><blockquote><blockquote><ul><li>有以下几种方式（字符大于等于三）</li><li><hr></li><li><hr><ul><li><hr></li><li><a href="[]">- - -</a></li><li><a href="[]">————</a></li></ul></li></ul></blockquote></blockquote></blockquote><blockquote><blockquote><ul><li>删除线   <ul><li>在要删除的文字两端加上两个波浪线<pre><code>~~jk~~        </code></pre></li></ul></li></ul></blockquote></blockquote><blockquote><blockquote><ul><li>下划线<ul><li>通过HTML的<u>u标签</u>实现</li></ul></li></ul></blockquote></blockquote><blockquote><blockquote><ul><li>脚注<ul><li>这是要注明的文字。<br>  ^[注释]</li></ul></li></ul></blockquote></blockquote><blockquote><blockquote><ul><li>列表    <ul><li>无序列表用 * 、+ 、-</li><li>有序列表 数字加点</li><li>列表嵌套 子列表前加四个空格</li></ul></li></ul></blockquote></blockquote><blockquote><blockquote><ul><li>区块</li></ul></blockquote></blockquote><blockquote><blockquote><blockquote><p>列表内使用区块加三个空格</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>1</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>2</p></blockquote></blockquote></blockquote><blockquote><blockquote><ul><li>MarkDown代码<ul><li>如果是段落上的一个函数或片段的代码可以用反引号将他包起来</li><li>代码区块使用<b>4空格</b>或<b>一个制表符</b></li><li>也可以用‘‘‘内容‘‘‘包裹并指定一种语言（也可以不指定）</li></ul></li></ul></blockquote></blockquote><pre><code>&lt;?php        echo &apos;123&apos;;        function test(){            echo &apos;test&apos;        }‘‘‘javascript$(document).ready(function(){    alert(&apos;Hello&apos;);});‘‘‘</code></pre><blockquote><blockquote><ul><li>MarkDown链接<ul><li>链接名称+链接地址  [name]+(url)<br><a href="https://www.baidu.com" target="_blank" rel="noopener">baidu</a></li><li>直接使用<url><br><a href="https:www.bilibili.com" target="_blank" rel="noopener">https:www.bilibili.com</a></li><li>高级链接<br>&nbsp;&nbsp;可以用变量代替网址,文档末尾附带变量地址<br><a href="https:www.baidu.com" target="_blank" rel="noopener">Baidu</a></li></ul></li></ul></blockquote></blockquote><pre><code>‘‘‘[Baidu][1][1]:https:www.baidu.com‘‘‘</code></pre><blockquote><blockquote><ul><li>MarkDown图片   </li></ul></blockquote></blockquote><ol><li><p>使用时</p><p>![alt 属性文本]（地址）<br>![alt 属性文本]（地址 “可选标题”）        </p></li><li><p>实践<br>![Baidu](<a href="https://www.baidu.com/img/bd_logo1.png?where=super" target="_blank" rel="noopener">https://www.baidu.com/img/bd_logo1.png?where=super</a> “Baidu”)</p></li><li><p>可以用变量代替图片</p></li><li><p>如果要指定图片大小用img标签<br>   下图为img标签效果宽度100dp</p><img width="100dp" src="https://www.baidu.com/img/bd_logo1.png?where=super"/></li></ol><blockquote><blockquote><ul><li>MarkDown表格   </li></ul></blockquote></blockquote><pre><code>语法格式：   | 表头  | 表头  || ----  | ----  || 单元格| 单元格|</code></pre><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><blockquote><blockquote><ul><li>高级技巧<ul><li>支持html元素：kbd b i em sup sub br</li><li>转义特殊符号前加\ <br><kbd>1</kbd>+<kbd>1</kbd>=<kbd>2</kbd><br><b>b</b><br><i>i</i><br><em>em</em><br/>9<sup>sup</sup><br>8<sub>sub</sub></li></ul></li></ul></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> MarkDown语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java GUI中组件布局问题</title>
      <link href="/2019/11/25/second/"/>
      <url>/2019/11/25/second/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre><code>在学习了java gui后自己做了一个简易计算器程序，在组件布局时，很多组件的大小和位置  不够理想，使得整体布局不堪入目，后来通过一系列调整终于能勉强能看。</code></pre><ul><li><p>对于组件（jcomponents）的大小而言，在布局管理器中直接使用<br>  <u>setSize(int w,int h)</u>是无效的，可以看出在实际显示时组件并未能如我们所期望的一样大小，<br>  这时我们如果必须改变组件大小，则要使用<u>setPreferredSize(Dimension d)^[设置组件大小的首选项]</u>通过传递Dimension<br>  参数来改变组件的大小。</p><hr></li><li><p>当然在没有布局管理器的情况下可以使用setSize()函数，例如在setLayout(null)时。此外，也可以使用setBounds(int x,int y,int w,int h)<br>  来指定具体位置。</p><hr></li><li><p>java gui默认创建的布局中文字都偏小，可以使用setFont(Font font)函数来解决这个问题，对于有多个同类组件要统一文字格式时可以使用<br>  一个自定义类来对其赋值，避免重复创建多个匿名font对象（虽然java回收器会自动回收）。   </p></li></ul><pre><code>public class myFont{    public static void setmyFont(JComponent jComponent){        Font f=new Font(&quot;字体&quot;，style(int),size(int));    }} 在使用的类中调用该类的静态方法    eg:    for(int i=0;i&lt;15;i++){        myFont.setmyFont(jButton[i]);    }可以对上面十五个按钮的字体进行更改</code></pre><ul><li><p>在编写gui使用swing时,底层JFrame有一个getComponents()函数，并不能用其获取当前框架类组件数组，</p><p>  因为其返回值为Component []型，Component是与菜单不相关的 Abstract Window Toolkit 组件的抽象超类</p><p>  直接扩展类 Component 来创建一个轻量级组件。轻量级组件是与本机不透明窗口不相关的组件；而JComponent</p><p>  类就是swing包中由Component抽象类的扩展；Component属于awt包，Jcomponent属于swing包</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> JAVA图形化编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> GUI </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
